<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_skeleton_walking</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables

//Sprite state
sprite_index = spr_skeleton_idle;
image_xscale = -1;
image_speed = 0.5; 
dir = 1;

//State of char
attacking = false;

//Starting speed of char
hsp = 0;
vsp = 0;

//Define Physics &amp; Char Stats
range_to_chase = 100;
range_to_attack = 5;
strength = 3;
max_hp = 30
hp = 30

movespeed = 1.5;
grav = 2;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///HP Management
player = instance_place(x,y,obj_player);
if (player &amp;&amp; player.attacking ) {
    hp -= player.strength;    
    if(hp&lt;0) hp = 0;
}

if (hp &lt;= 0){
    instance_destroy();
    exit;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
/******** Vertical ********/
//Whilst vsp is not the maxspeed, add gravity
if (vsp &lt; 10) vsp += grav;

//Collision
if (place_meeting(x,y+vsp,obj_wall)){
    while(!place_meeting(x,y+sign(vsp),obj_wall)){
        y += 1;
    }
    vsp = 0;
}

/******** Vertical End********/

//Target
player = instance_nearest(x,y,obj_player);


/******** Attack *************/
if(!attacking &amp;&amp; distance_to_object(player) &lt; range_to_attack){
    sprite_index = spr_skeleton_slash;  
    attacking = true;
    image_speed = 0.5; 
    image_index = 0;

} else if (attacking &amp;&amp; image_index &gt; image_number - 1) {
    attacking = false;    
    image_speed = 0.3; 
}

if(attacking){
    exit;
}

/******** Attack End *********/

/******** Horizontal ********/

if(x &gt; player.x){
    dir = -1;
} else {
    dir = 1;
}
if(0 &lt; distance_to_object(player) &amp;&amp;  distance_to_object(player) &lt; range_to_chase){
    sprite_index = spr_skeleton_walking;
    hsp = movespeed * dir;
} else {
    sprite_index = spr_skeleton_idle;
    hsp = 0;
}
image_xscale = dir;
/******** Horizontal End ********/



y += vsp;
x += hsp;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
//HP Management
pc = (hp/max_hp)*100;
draw_healthbar(x-20, y-35, x+20, y-30, pc, c_black, c_red, c_red, 0, false, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
